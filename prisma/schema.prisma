// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FoodItem {
  id          String   @id @default(cuid())
  name        String
  slug        String  @unique
  description String
  price       Decimal
  category    String
  image       String
  OrderItem OrderItem[]
  favorites Favorite[] 

}

model Order {
  id             String     @id @default(cuid())
  customerName   String
  customerPhone  String
  customerEmail  String?
  deliveryAddress   String
  deliveryNote   String?
  subtotal       Decimal
  deliveryFee    Decimal
  tax            Decimal
  total          Decimal
  createdAt      DateTime   @default(now())

  user           User       @relation("UserOrders",fields:[userId], references:[id])
  userId         String

  items          OrderItem[]
}

model OrderItem {
  id       String   @id @default(cuid())
  order    Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId  String
  food     FoodItem @relation(fields: [foodId], references: [id])
  foodId   String
  quantity Int
  price    Decimal  
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  hash     String      
  createdAt      DateTime   @default(now())
  orders Order[] @relation("UserOrders")
  favorites Favorite[] 
}

model Favorite {
  id   String    @id @default(cuid())
  user User     @relation(fields: [userId],references: [id],onDelete: Cascade)
  userId String
  food FoodItem  @relation(fields: [foodId],references: [id],onDelete: Cascade)
  foodId String
}
